import { useMemo, useState } from "react"
import { Check, ChevronDown, ChevronUp, Copy } from "lucide-react"

import { Button } from "@/components/ui/button"
import { cn } from "@/lib/utils"

import type { TurnDiff } from "./types"

export function TurnDiffCard({ diff }: { diff: TurnDiff }) {
  const [isOpen, setIsOpen] = useState(true)
  const [copied, setCopied] = useState(false)

  const lines = useMemo(() => diff.diff.split("\n"), [diff.diff])

  async function handleCopy() {
    try {
      await navigator.clipboard.writeText(diff.diff)
      setCopied(true)
      window.setTimeout(() => setCopied(false), 1600)
    } catch (error) {
      console.error("Copy diff failed", error)
    }
  }

  return (
    <div className="overflow-hidden rounded-xl border bg-muted/40">
      <div className="flex items-center justify-between gap-3 border-b bg-background/60 px-4 py-2.5">
        <div className="flex flex-wrap items-center gap-3 text-xs font-medium uppercase tracking-wide text-muted-foreground">
          <span className="rounded-md bg-secondary/40 px-2 py-1 text-foreground/90">
            {diff.filename}
          </span>
          <span className="text-emerald-600 dark:text-emerald-400">+ {diff.added}</span>
          <span className="text-red-600 dark:text-red-400">- {diff.removed}</span>
        </div>
        <div className="flex items-center gap-1.5">
          <Button
            type="button"
            variant="ghost"
            size="icon"
            className={cn("size-8", copied && "text-emerald-600")}
            onClick={handleCopy}
            title={copied ? "Diff copied" : "Copy diff"}
            aria-label={copied ? "Diff copied" : "Copy diff"}
          >
            {copied ? <Check className="size-4" /> : <Copy className="size-4" />}
          </Button>
          <Button
            type="button"
            variant="ghost"
            size="icon"
            className="size-8"
            onClick={() => setIsOpen((value) => !value)}
            title={isOpen ? "Collapse diff" : "Expand diff"}
            aria-expanded={isOpen}
            aria-controls={`diff-${diff.id}`}
          >
            {isOpen ? <ChevronUp className="size-4" /> : <ChevronDown className="size-4" />}
          </Button>
        </div>
      </div>
      {isOpen && (
        <pre
          id={`diff-${diff.id}`}
          className="max-h-80 overflow-auto bg-background px-4 py-3 text-sm leading-6"
        >
          <code className="grid gap-0.5 font-mono text-xs text-muted-foreground">
            {lines.map((line, index) => {
              const first = line.charAt(0)
              const tone =
                first === "+"
                  ? "text-emerald-600 dark:text-emerald-400"
                  : first === "-"
                    ? "text-red-600 dark:text-red-400"
                    : first === "@"
                      ? "text-blue-600 dark:text-blue-400"
                      : "text-muted-foreground"

              return (
                <span key={index} className={cn("whitespace-pre", tone)}>
                  {line || "\u00A0"}
                </span>
              )
            })}
          </code>
        </pre>
      )}
    </div>
  )
}
